#include <iostream>
#include <algorithm>

using namespace std;

int main()
{

    // 1Q key pair problem  || two sum problem

    //*****(1st Method to solve this proble but it has poor time Complexity)

    int arr[6] = {1, 2, 3, 4, 5, 6};
    int size = 6;

    int target = 11;

    for (int i = 0; i < size; i++)
    {

        for (int j = i + 1; j < size; j++)
        {
            if (arr[i] + arr[j] == target)
            {
                cout << "the two number are" << arr[i] << " "
                     << arr[j] << endl;
            }
        }
    };

    // #######but it is not the best solution for that Q ..
    // ######the time complixity of this code is O(n^2)...that time complixity is not good for the problem
    // #######know to over come this problem of time complixity of the code and for good solution we will make use of two pointer apporach

    //******(2nd Method to solve this proble but it has good time Complexity)
    
    int arr[6] = {5, 2, 6, 3, 1, 4};
    int size = 6;
    int target = 11;

    sort(arr, arr + size); // ######we use sort function to sort the array in the ascending order and for that we have include the header file of the algorithm(<algorithm>) library.
    // ####the time complixity of the sort function is O(nlogn)

    int l = arr[0];
    int h = arr[size - 1];

    while (l < h)
    {
        if (arr[l] + arr[h] == target)
        {
            cout << "the two number are" << arr[l] << " " << arr[h] << endl;
            break;
        }
        else if (arr[l] + arr[h] < target)
        {
            l++;
        }
        else if (arr[l] + arr[h] > target)
        {
            h--;
        }
    }

    return 0;
}
