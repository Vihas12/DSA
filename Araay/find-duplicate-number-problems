
//************6Q find the duplicate number in the vector************

description---->>we have the vector and we have to find the duplicate number in the vector but the duplicate number may be more then one 
                and this vector or array is of n+1 size,and elements in this vector is in the range of 1 to n only.






  
code---->>

  
   #include <iostream>
   #include <cmath>


  int main() {


  

  //*************(1st method using sort funcation)*******

  vector<int>v={1,3,2,4,2};                          //####initiallisation of the vector and the value in the vector
  
  int size=v.size();

  sort(v.begin(),v.end());                           //###### to using the sort function(for that we have to include the header file 
                                                              of the algorithm(<algorithm>)) library).

  for(int i=0;i<size-1;i++){ 

    if(v[i]==v[i+1]){
      cout<<"the duplicate number is"<<" "<<v[i]<<endl;
      break;
    }
  }

  //### time complixity:  the time complixity of this code is O(nlogn)-->the time complix of sort function is O(nlogn) 

  //############### the space complixty is o(1)


  


  //*****************(2nd method visite method)*********
  
   vector<int>v={1,3,2,4,2};                          //####initiallisation of the vector and the value in the vector

   int size=v.size();

 
  
  for(int i=0;i<size;i++){
    int index=abs(v[i]);                                //########### abs() menas absolute value (or modulus) | x | of a real number. 

    if(v[index]<0){
      cout<<"the duplicate number is"<<" "<<index<<endl;
      break;
    }

    v[index]*=(-1);
  };

  
  //### time complixity:  the time complixity of this code is O(n)--(how)--->the time complix of the for loop is O(n)--->o(n)

  //############### the space complixty is o(1)



  //*************(3rd method postion method)********

  
  
    
    vector<int>v={1,3,2,4,2};                             //####initiallisation of the vector and the value in the vector

    while((v[0] != v[v[0]])){
    
    swap(v[0],v[v[0]]);
  }

  cout<<"the duplicate number is"<<" "<<v[0];

  //### time complixity:  the time complixity of this code is O(n)
  //############### the space complixty is o(1)

  //##### this is also the best and shorter method to find the duplicate number in the vector.



  return 0;

}

  
